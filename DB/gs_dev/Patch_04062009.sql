
create database GS_DEV;
USE GS_DEV;

create table GS_TOP_LINK
(
	LINK_CODE VARCHAR(20) PRIMARY KEY,
	LINK_NAME VARCHAR(25) NOT NULL,
	HAS_SUB_LINK BOOLEAN DEFAULT FALSE,
	EVENT_TYPE_CODE VARCHAR(150)
);
INSERT INTO GS_TOP_LINK VALUES ("HOME_TOP_LINK", "Home", false, "HOME_TOP_LINK_EVENT_CODE");
INSERT INTO GS_TOP_LINK VALUES ("PRODUCTS_TOP_LINK", "Products", true, "PRODUCTS_TOP_LINK_EVENT_CODE");
INSERT INTO GS_TOP_LINK VALUES ("ACCOUNT_TOP_LINK", "Account", true, "ACCOUNT_TOP_LINK_EVENT_CODE");
INSERT INTO GS_TOP_LINK VALUES ("CONTACT_TOP_LINK", "Contact", true, "CONTACT_TOP_LINK_EVENT_CODE");
INSERT INTO GS_TOP_LINK VALUES ("ABOUT_TOP_LINK", "About", true, "ABOUT_TOP_LINK_EVENT_CODE");



create table GS_SUB_LINK
(
	LINK_CODE VARCHAR(20) PRIMARY KEY,
	LINK_NAME VARCHAR(25) NOT NULL,
	PARENT_LINK_CODE VARCHAR(20) NOT NULL,
	EVENT_TYPE_CODE VARCHAR(150),
	FOREIGN KEY (LINK_CODE) REFERENCES GS_TOP_LINK(LINK_CODE)
);
ALTER TABLE GS_SUB_LINK ADD COLUMN HAS_SUB_CATAGORY BOOLEAN DEFAULT FALSE;
-- INSERT INTO GS_TOP_LINK VALUES ("_SUB_LINK", "", "", "_EVENT_CODE");
INSERT INTO GS_TOP_LINK VALUES ("BOOKS_SUB_LINK", "Books", "PRODUCTS_TOP_LINK", "BOOKS_SUB_LINK_EVENT_CODE", TRUE);
INSERT INTO GS_TOP_LINK VALUES ("SOFTWARE_SUB_LINK", "Soft", "", "_EVENT_CODE", );
INSERT INTO GS_TOP_LINK VALUES ("HARDWARE_SUB_LINK", "", "", "_EVENT_CODE", );
INSERT INTO GS_TOP_LINK VALUES ("ACCESSORIES_SUB_LINK", "", "", "_EVENT_CODE", );
INSERT INTO GS_TOP_LINK VALUES ("HEALTH_SUB_LINK", "", "", "_EVENT_CODE", );
INSERT INTO GS_TOP_LINK VALUES ("VEDIOS_SUB_LINK", "", "", "_EVENT_CODE", );
INSERT INTO GS_TOP_LINK VALUES ("EXTRAS_SUB_LINK", "", "", "_EVENT_CODE", );


CREATE TABLE GS_CATAGORY
(
	CATAGORY_ID BIGINT(10) PRIMARY KEY AUTO_INCREMENT(1),
	CATAGORY_NAME VARCHAR(150) NOT NULL,
	

create table GS_SUB_CATAGORY
(
	CATAGORY_ID BIGINT(10) PRIMARY KEY AUTO_INCREMENT(1),
	SUB_CATAGORY_CODE VARCHAR(150) ,
	CATAGORY_NAME VARCHAR(25) NOT NULL,
	PARENT_LINK_CODE VARCHAR(20) NOT NULL,
	EVENT_TYPE_CODE VARCHAR(150),
	FOREIGN KEY (LINK_CODE) REFERENCES GS_TOP_LINK(LINK_CODE)
);




