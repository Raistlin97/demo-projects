/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JPromptInternalFrame.java
 *
 * Created on Jan 19, 2011, 12:27:38 PM
 */

package jprompt.mockup;

/**
 *
 * @author 50120C1509
 */
public class JPromptInternalFrame extends javax.swing.JInternalFrame {

    /** Creates new form JPromptInternalFrame */
    public JPromptInternalFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        promptAreaPopupMenu = new javax.swing.JPopupMenu();
        refreshMenuItem = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        copyMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        clearMenuItem = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        startPauseMenuItem = new javax.swing.JMenuItem();
        stopMenuItem = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        showToolbarCheckBoxMenuItem = new javax.swing.JCheckBoxMenuItem();
        promptToolBar = new javax.swing.JToolBar();
        refreshButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        copyButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        clearButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        startPauseButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        promptTextArea = new javax.swing.JTextArea();

        FormListener formListener = new FormListener();

        promptAreaPopupMenu.setName("promptAreaPopupMenu"); // NOI18N

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("jprompt/mockup/Bundle"); // NOI18N
        refreshMenuItem.setText(bundle.getString("JPromptInternalFrame.refreshMenuItem.text")); // NOI18N
        refreshMenuItem.setName("refreshMenuItem"); // NOI18N
        refreshMenuItem.addActionListener(formListener);
        promptAreaPopupMenu.add(refreshMenuItem);

        jSeparator4.setName("jSeparator4"); // NOI18N
        promptAreaPopupMenu.add(jSeparator4);

        copyMenuItem.setText(bundle.getString("JPromptInternalFrame.copyMenuItem.text")); // NOI18N
        copyMenuItem.setName("copyMenuItem"); // NOI18N
        copyMenuItem.addActionListener(formListener);
        promptAreaPopupMenu.add(copyMenuItem);

        saveMenuItem.setText(bundle.getString("JPromptInternalFrame.saveMenuItem.text")); // NOI18N
        saveMenuItem.setName("saveMenuItem"); // NOI18N
        saveMenuItem.addActionListener(formListener);
        promptAreaPopupMenu.add(saveMenuItem);

        jSeparator5.setName("jSeparator5"); // NOI18N
        promptAreaPopupMenu.add(jSeparator5);

        clearMenuItem.setText(bundle.getString("JPromptInternalFrame.clearMenuItem.text")); // NOI18N
        clearMenuItem.setName("clearMenuItem"); // NOI18N
        clearMenuItem.addActionListener(formListener);
        promptAreaPopupMenu.add(clearMenuItem);

        jSeparator6.setName("jSeparator6"); // NOI18N
        promptAreaPopupMenu.add(jSeparator6);

        startPauseMenuItem.setText(bundle.getString("JPromptInternalFrame.startPauseMenuItem.text")); // NOI18N
        startPauseMenuItem.setName("startPauseMenuItem"); // NOI18N
        startPauseMenuItem.addActionListener(formListener);
        promptAreaPopupMenu.add(startPauseMenuItem);

        stopMenuItem.setText(bundle.getString("JPromptInternalFrame.stopMenuItem.text")); // NOI18N
        stopMenuItem.setName("stopMenuItem"); // NOI18N
        stopMenuItem.addActionListener(formListener);
        promptAreaPopupMenu.add(stopMenuItem);

        jSeparator7.setName("jSeparator7"); // NOI18N
        promptAreaPopupMenu.add(jSeparator7);

        showToolbarCheckBoxMenuItem.setSelected(true);
        showToolbarCheckBoxMenuItem.setText(bundle.getString("JPromptInternalFrame.showToolbarCheckBoxMenuItem.text")); // NOI18N
        showToolbarCheckBoxMenuItem.setName("showToolbarCheckBoxMenuItem"); // NOI18N
        showToolbarCheckBoxMenuItem.addActionListener(formListener);
        promptAreaPopupMenu.add(showToolbarCheckBoxMenuItem);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle(bundle.getString("JPromptInternalFrame.title")); // NOI18N
        setName("Form"); // NOI18N
        addInternalFrameListener(formListener);
        addFocusListener(formListener);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        promptToolBar.setFloatable(false);
        promptToolBar.setRollover(true);
        promptToolBar.setName("promptToolBar"); // NOI18N

        refreshButton.setText(bundle.getString("JPromptInternalFrame.refreshButton.text")); // NOI18N
        refreshButton.setFocusable(false);
        refreshButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        refreshButton.setName("refreshButton"); // NOI18N
        refreshButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        refreshButton.addActionListener(formListener);
        promptToolBar.add(refreshButton);

        jSeparator1.setName("jSeparator1"); // NOI18N
        promptToolBar.add(jSeparator1);

        copyButton.setText(bundle.getString("JPromptInternalFrame.copyButton.text")); // NOI18N
        copyButton.setFocusable(false);
        copyButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        copyButton.setName("copyButton"); // NOI18N
        copyButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        copyButton.addActionListener(formListener);
        promptToolBar.add(copyButton);

        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save_edit.gif"))); // NOI18N
        saveButton.setText(bundle.getString("JPromptInternalFrame.saveButton.text")); // NOI18N
        saveButton.setFocusable(false);
        saveButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveButton.setName("saveButton"); // NOI18N
        saveButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveButton.addActionListener(formListener);
        promptToolBar.add(saveButton);

        jSeparator2.setName("jSeparator2"); // NOI18N
        promptToolBar.add(jSeparator2);

        clearButton.setText(bundle.getString("JPromptInternalFrame.clearButton.text")); // NOI18N
        clearButton.setFocusable(false);
        clearButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clearButton.setName("clearButton"); // NOI18N
        clearButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clearButton.addActionListener(formListener);
        promptToolBar.add(clearButton);

        jSeparator3.setName("jSeparator3"); // NOI18N
        promptToolBar.add(jSeparator3);

        startPauseButton.setText(bundle.getString("JPromptInternalFrame.startPauseButton.text")); // NOI18N
        startPauseButton.setFocusable(false);
        startPauseButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        startPauseButton.setName("startPauseButton"); // NOI18N
        startPauseButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        startPauseButton.addActionListener(formListener);
        promptToolBar.add(startPauseButton);

        stopButton.setText(bundle.getString("JPromptInternalFrame.stopButton.text")); // NOI18N
        stopButton.setFocusable(false);
        stopButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        stopButton.setName("stopButton"); // NOI18N
        stopButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        stopButton.addActionListener(formListener);
        promptToolBar.add(stopButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);
        getContentPane().add(promptToolBar, gridBagConstraints);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        promptTextArea.setColumns(20);
        promptTextArea.setRows(10);
        promptTextArea.setTabSize(4);
        promptTextArea.setComponentPopupMenu(promptAreaPopupMenu);
        promptTextArea.setName("promptTextArea"); // NOI18N
        promptTextArea.addCaretListener(formListener);
        promptTextArea.addFocusListener(formListener);
        promptTextArea.addInputMethodListener(formListener);
        promptTextArea.addPropertyChangeListener(formListener);
        promptTextArea.addKeyListener(formListener);
        promptTextArea.addVetoableChangeListener(formListener);
        jScrollPane1.setViewportView(promptTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jScrollPane1, gridBagConstraints);

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.InputMethodListener, java.awt.event.KeyListener, java.beans.PropertyChangeListener, java.beans.VetoableChangeListener, javax.swing.event.CaretListener, javax.swing.event.InternalFrameListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == refreshButton) {
                JPromptInternalFrame.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == copyButton) {
                JPromptInternalFrame.this.copyButtonActionPerformed(evt);
            }
            else if (evt.getSource() == saveButton) {
                JPromptInternalFrame.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == clearButton) {
                JPromptInternalFrame.this.clearButtonActionPerformed(evt);
            }
            else if (evt.getSource() == startPauseButton) {
                JPromptInternalFrame.this.startPauseButtonActionPerformed(evt);
            }
            else if (evt.getSource() == stopButton) {
                JPromptInternalFrame.this.stopButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refreshMenuItem) {
                JPromptInternalFrame.this.refreshMenuItemActionPerformed(evt);
            }
            else if (evt.getSource() == copyMenuItem) {
                JPromptInternalFrame.this.copyMenuItemActionPerformed(evt);
            }
            else if (evt.getSource() == saveMenuItem) {
                JPromptInternalFrame.this.saveMenuItemActionPerformed(evt);
            }
            else if (evt.getSource() == clearMenuItem) {
                JPromptInternalFrame.this.clearMenuItemActionPerformed(evt);
            }
            else if (evt.getSource() == startPauseMenuItem) {
                JPromptInternalFrame.this.startPauseMenuItemActionPerformed(evt);
            }
            else if (evt.getSource() == stopMenuItem) {
                JPromptInternalFrame.this.stopMenuItemActionPerformed(evt);
            }
            else if (evt.getSource() == showToolbarCheckBoxMenuItem) {
                JPromptInternalFrame.this.showToolbarCheckBoxMenuItemActionPerformed(evt);
            }
        }

        public void focusGained(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == promptTextArea) {
                JPromptInternalFrame.this.promptTextAreaFocusGained(evt);
            }
            else if (evt.getSource() == JPromptInternalFrame.this) {
                JPromptInternalFrame.this.formFocusGained(evt);
            }
        }

        public void focusLost(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == promptTextArea) {
                JPromptInternalFrame.this.promptTextAreaFocusLost(evt);
            }
            else if (evt.getSource() == JPromptInternalFrame.this) {
                JPromptInternalFrame.this.formFocusLost(evt);
            }
        }

        public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            if (evt.getSource() == promptTextArea) {
                JPromptInternalFrame.this.promptTextAreaCaretPositionChanged(evt);
            }
        }

        public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            if (evt.getSource() == promptTextArea) {
                JPromptInternalFrame.this.promptTextAreaInputMethodTextChanged(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == promptTextArea) {
                JPromptInternalFrame.this.promptTextAreaKeyPressed(evt);
            }
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == promptTextArea) {
                JPromptInternalFrame.this.promptTextAreaKeyReleased(evt);
            }
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == promptTextArea) {
                JPromptInternalFrame.this.promptTextAreaKeyTyped(evt);
            }
        }

        public void propertyChange(java.beans.PropertyChangeEvent evt) {
            if (evt.getSource() == promptTextArea) {
                JPromptInternalFrame.this.promptTextAreaPropertyChange(evt);
            }
        }

        public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
            if (evt.getSource() == promptTextArea) {
                JPromptInternalFrame.this.promptTextAreaVetoableChange(evt);
            }
        }

        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            if (evt.getSource() == promptTextArea) {
                JPromptInternalFrame.this.promptTextAreaCaretUpdate(evt);
            }
        }

        public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            if (evt.getSource() == JPromptInternalFrame.this) {
                JPromptInternalFrame.this.formInternalFrameActivated(evt);
            }
        }

        public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            if (evt.getSource() == JPromptInternalFrame.this) {
                JPromptInternalFrame.this.formInternalFrameClosed(evt);
            }
        }

        public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            if (evt.getSource() == JPromptInternalFrame.this) {
                JPromptInternalFrame.this.formInternalFrameClosing(evt);
            }
        }

        public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            if (evt.getSource() == JPromptInternalFrame.this) {
                JPromptInternalFrame.this.formInternalFrameDeactivated(evt);
            }
        }

        public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            if (evt.getSource() == JPromptInternalFrame.this) {
                JPromptInternalFrame.this.formInternalFrameDeiconified(evt);
            }
        }

        public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            if (evt.getSource() == JPromptInternalFrame.this) {
                JPromptInternalFrame.this.formInternalFrameIconified(evt);
            }
        }

        public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            if (evt.getSource() == JPromptInternalFrame.this) {
                JPromptInternalFrame.this.formInternalFrameOpened(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void copyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copyButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clearButtonActionPerformed

    private void startPauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startPauseButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startPauseButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stopButtonActionPerformed

    private void promptTextAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_promptTextAreaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_promptTextAreaKeyPressed

    private void promptTextAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_promptTextAreaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_promptTextAreaKeyReleased

    private void promptTextAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_promptTextAreaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_promptTextAreaKeyTyped

    private void promptTextAreaCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_promptTextAreaCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_promptTextAreaCaretUpdate

    private void promptTextAreaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_promptTextAreaFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_promptTextAreaFocusGained

    private void promptTextAreaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_promptTextAreaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_promptTextAreaFocusLost

    private void promptTextAreaCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_promptTextAreaCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_promptTextAreaCaretPositionChanged

    private void promptTextAreaInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_promptTextAreaInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_promptTextAreaInputMethodTextChanged

    private void promptTextAreaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_promptTextAreaPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_promptTextAreaPropertyChange

    private void promptTextAreaVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_promptTextAreaVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_promptTextAreaVetoableChange

    private void refreshMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_refreshMenuItemActionPerformed

    private void copyMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copyMenuItemActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void clearMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clearMenuItemActionPerformed

    private void startPauseMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startPauseMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startPauseMenuItemActionPerformed

    private void stopMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stopMenuItemActionPerformed

    private void showToolbarCheckBoxMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showToolbarCheckBoxMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showToolbarCheckBoxMenuItemActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_formFocusGained

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_formFocusLost

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameActivated

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameClosed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameClosing

    private void formInternalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameDeactivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameDeactivated

    private void formInternalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameDeiconified
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameDeiconified

    private void formInternalFrameIconified(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameIconified
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameIconified

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JMenuItem clearMenuItem;
    private javax.swing.JButton copyButton;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu promptAreaPopupMenu;
    private javax.swing.JTextArea promptTextArea;
    private javax.swing.JToolBar promptToolBar;
    private javax.swing.JButton refreshButton;
    private javax.swing.JMenuItem refreshMenuItem;
    private javax.swing.JButton saveButton;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JCheckBoxMenuItem showToolbarCheckBoxMenuItem;
    private javax.swing.JButton startPauseButton;
    private javax.swing.JMenuItem startPauseMenuItem;
    private javax.swing.JButton stopButton;
    private javax.swing.JMenuItem stopMenuItem;
    // End of variables declaration//GEN-END:variables

}
