/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.gs.games.mysticsquare.app.ui;

import com.gs.utils.swing.window.WindowUtil;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;

/**
 *
 * @author SG1736
 */
public class MysticSquareGameFrame extends javax.swing.JFrame {

    /**
     * Creates new form MysticSquareGameFrame
     */
    public MysticSquareGameFrame() {
        setIconImage((new ImageIcon(getClass()
                .getResource("/images/game-chip-24x24.png"))).getImage());
        initComponents();
        WindowUtil.bringToCenter(this);
        Graphics g = getGraphics();
        if(null != g){
        	RenderingHints hints = new RenderingHints(
    				RenderingHints.KEY_ANTIALIASING,
    				RenderingHints.VALUE_ANTIALIAS_ON);
    		hints.add(new RenderingHints(RenderingHints.KEY_RENDERING,
    				RenderingHints.VALUE_RENDER_QUALITY));

    		Graphics2D g2d = (Graphics2D) g;
    		g2d.setRenderingHints(hints);
    		update(g2d);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gameControlToolBar = new javax.swing.JToolBar();
        newGameButton = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        loadGameButton = new javax.swing.JButton();
        saveGameButton = new javax.swing.JButton();
        endGameButton = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        undoButton = new javax.swing.JButton();
        redoButton = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        hintButton = new javax.swing.JButton();
        jSeparator12 = new javax.swing.JToolBar.Separator();
        evaluteCurrentGameButton = new javax.swing.JButton();
        contentPanel = new javax.swing.JPanel();
        boardContainerPanel = new javax.swing.JPanel();
        playerInfoPanel = new javax.swing.JPanel();
        playerNameLabel = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        boardSizeSlider = new javax.swing.JSlider();
        selectedBoardSizeLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        timerLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        movementTextArea = new javax.swing.JTextArea();
        clearMovenentsButton = new javax.swing.JButton();
        gameMenuBar = new javax.swing.JMenuBar();
        gameMenu = new javax.swing.JMenu();
        newGameMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        loadGameMenuItem = new javax.swing.JMenuItem();
        saveGameMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        evaluteCurrentGameMenuItem = new javax.swing.JMenuItem();
        endGameMenuItem = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        minimize2TrayMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        undoMenuItem = new javax.swing.JMenuItem();
        redoMenuItem = new javax.swing.JMenuItem();
        jSeparator14 = new javax.swing.JPopupMenu.Separator();
        changePlayerNamesMenuItem = new javax.swing.JMenuItem();
        settingsMenu = new javax.swing.JMenu();
        showToolbarCheckBoxMenuItem = new javax.swing.JCheckBoxMenuItem();
        jSeparator9 = new javax.swing.JPopupMenu.Separator();
        preferenceMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        helpMenuItem = new javax.swing.JMenuItem();
        showHintMenuItem = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        gameControlToolBar.setFloatable(false);
        gameControlToolBar.setRollover(true);

        newGameButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new_game.gif"))); // NOI18N
        newGameButton.setText("New");
        newGameButton.setToolTipText("New Game");
        newGameButton.setFocusable(false);
        newGameButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        newGameButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameButtonActionPerformed(evt);
            }
        });
        gameControlToolBar.add(newGameButton);
        gameControlToolBar.add(jSeparator7);

        loadGameButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/load_game.png"))); // NOI18N
        loadGameButton.setText("Load");
        loadGameButton.setToolTipText("Load Game");
        loadGameButton.setFocusable(false);
        loadGameButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        loadGameButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        loadGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadGameButtonActionPerformed(evt);
            }
        });
        gameControlToolBar.add(loadGameButton);

        saveGameButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save_edit.gif"))); // NOI18N
        saveGameButton.setText("Save");
        saveGameButton.setToolTipText("Save Game");
        saveGameButton.setEnabled(false);
        saveGameButton.setFocusable(false);
        saveGameButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        saveGameButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveGameButtonActionPerformed(evt);
            }
        });
        gameControlToolBar.add(saveGameButton);

        endGameButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/end_game.png"))); // NOI18N
        endGameButton.setText("End");
        endGameButton.setToolTipText("End Game");
        endGameButton.setEnabled(false);
        endGameButton.setFocusable(false);
        endGameButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        endGameButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        endGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endGameButtonActionPerformed(evt);
            }
        });
        gameControlToolBar.add(endGameButton);
        gameControlToolBar.add(jSeparator5);

        undoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/undo.png"))); // NOI18N
        undoButton.setText("Undo");
        undoButton.setEnabled(false);
        undoButton.setFocusable(false);
        undoButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        undoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        undoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoButtonActionPerformed(evt);
            }
        });
        gameControlToolBar.add(undoButton);

        redoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/redo.png"))); // NOI18N
        redoButton.setText("Redo");
        redoButton.setEnabled(false);
        redoButton.setFocusable(false);
        redoButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        redoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        redoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redoButtonActionPerformed(evt);
            }
        });
        gameControlToolBar.add(redoButton);
        gameControlToolBar.add(jSeparator6);

        hintButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hint_bulb.png"))); // NOI18N
        hintButton.setText("Hint");
        hintButton.setToolTipText("Show Hint");
        hintButton.setEnabled(false);
        hintButton.setFocusable(false);
        hintButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        hintButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        hintButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hintButtonActionPerformed(evt);
            }
        });
        gameControlToolBar.add(hintButton);
        gameControlToolBar.add(jSeparator12);

        evaluteCurrentGameButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/evalute-16x16.png"))); // NOI18N
        evaluteCurrentGameButton.setText("Evalute");
        evaluteCurrentGameButton.setEnabled(false);
        evaluteCurrentGameButton.setFocusable(false);
        evaluteCurrentGameButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        evaluteCurrentGameButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        evaluteCurrentGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evaluteCurrentGameButtonActionPerformed(evt);
            }
        });
        gameControlToolBar.add(evaluteCurrentGameButton);

        getContentPane().add(gameControlToolBar, java.awt.BorderLayout.PAGE_START);

        contentPanel.setForeground(new java.awt.Color(0, 102, 102));

        boardContainerPanel.setBackground(new java.awt.Color(227, 176, 116));
        boardContainerPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)), javax.swing.BorderFactory.createMatteBorder(7, 7, 7, 7, new java.awt.Color(0, 153, 51))), javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 153, 51)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 204)))));

        playerNameLabel.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        playerNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel1.setText("Board Size");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel3.setText("Settings");

        boardSizeSlider.setMaximum(5);
        boardSizeSlider.setMinimum(1);
        boardSizeSlider.setPaintLabels(true);
        boardSizeSlider.setSnapToTicks(true);
        boardSizeSlider.setToolTipText("Board Size");
        boardSizeSlider.setValue(3);
        boardSizeSlider.setEnabled(false);
        boardSizeSlider.setMaximumSize(new java.awt.Dimension(200, 25));
        boardSizeSlider.setMinimumSize(new java.awt.Dimension(200, 25));
        boardSizeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                boardSizeSliderStateChanged(evt);
            }
        });

        selectedBoardSizeLabel.setForeground(new java.awt.Color(0, 0, 204));
        selectedBoardSizeLabel.setText("NORMAL");

        javax.swing.GroupLayout playerInfoPanelLayout = new javax.swing.GroupLayout(playerInfoPanel);
        playerInfoPanel.setLayout(playerInfoPanelLayout);
        playerInfoPanelLayout.setHorizontalGroup(
            playerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator4)
            .addGroup(playerInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(playerInfoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(playerInfoPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(playerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(playerInfoPanelLayout.createSequentialGroup()
                                .addComponent(selectedBoardSizeLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(playerInfoPanelLayout.createSequentialGroup()
                                .addComponent(boardSizeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        playerInfoPanelLayout.setVerticalGroup(
            playerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(playerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(boardSizeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectedBoardSizeLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " Movement ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        timerLabel.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        movementTextArea.setEditable(false);
        movementTextArea.setColumns(20);
        movementTextArea.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        movementTextArea.setRows(5);
        jScrollPane1.setViewportView(movementTextArea);

        clearMovenentsButton.setText("Clear");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(timerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(clearMovenentsButton))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(timerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clearMovenentsButton))
        );

        javax.swing.GroupLayout contentPanelLayout = new javax.swing.GroupLayout(contentPanel);
        contentPanel.setLayout(contentPanelLayout);
        contentPanelLayout.setHorizontalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPanelLayout.createSequentialGroup()
                .addComponent(boardContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(playerInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        contentPanelLayout.setVerticalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(boardContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
            .addGroup(contentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playerInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(contentPanel, java.awt.BorderLayout.CENTER);

        gameMenu.setText("Game");
        gameMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameMenuActionPerformed(evt);
            }
        });

        newGameMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newGameMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new_game.gif"))); // NOI18N
        newGameMenuItem.setText("New");
        newGameMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameMenuItemActionPerformed(evt);
            }
        });
        gameMenu.add(newGameMenuItem);
        gameMenu.add(jSeparator1);

        loadGameMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        loadGameMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/load_game.png"))); // NOI18N
        loadGameMenuItem.setText("Load");
        loadGameMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadGameMenuItemActionPerformed(evt);
            }
        });
        gameMenu.add(loadGameMenuItem);

        saveGameMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveGameMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save_edit.gif"))); // NOI18N
        saveGameMenuItem.setText("Save");
        saveGameMenuItem.setEnabled(false);
        saveGameMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveGameMenuItemActionPerformed(evt);
            }
        });
        gameMenu.add(saveGameMenuItem);
        gameMenu.add(jSeparator2);

        evaluteCurrentGameMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        evaluteCurrentGameMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/evalute-16x16.png"))); // NOI18N
        evaluteCurrentGameMenuItem.setText("Evalute Current Game");
        evaluteCurrentGameMenuItem.setEnabled(false);
        gameMenu.add(evaluteCurrentGameMenuItem);

        endGameMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        endGameMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/end_game.png"))); // NOI18N
        endGameMenuItem.setText("End Game");
        endGameMenuItem.setEnabled(false);
        endGameMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endGameMenuItemActionPerformed(evt);
            }
        });
        gameMenu.add(endGameMenuItem);
        gameMenu.add(jSeparator3);

        minimize2TrayMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_MASK));
        minimize2TrayMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hide.png"))); // NOI18N
        minimize2TrayMenuItem.setText("Minimize to Tray ...");
        minimize2TrayMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minimize2TrayMenuItemActionPerformed(evt);
            }
        });
        gameMenu.add(minimize2TrayMenuItem);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        exitMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit.png"))); // NOI18N
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        gameMenu.add(exitMenuItem);

        gameMenuBar.add(gameMenu);

        editMenu.setText("Edit");

        undoMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        undoMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/undo.png"))); // NOI18N
        undoMenuItem.setText("Undo");
        undoMenuItem.setEnabled(false);
        undoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(undoMenuItem);

        redoMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        redoMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/redo.png"))); // NOI18N
        redoMenuItem.setText("Redo");
        redoMenuItem.setEnabled(false);
        redoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redoMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(redoMenuItem);
        editMenu.add(jSeparator14);

        changePlayerNamesMenuItem.setText("Change Player Names");
        changePlayerNamesMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePlayerNamesMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(changePlayerNamesMenuItem);

        gameMenuBar.add(editMenu);

        settingsMenu.setText("Settings");

        showToolbarCheckBoxMenuItem.setSelected(true);
        showToolbarCheckBoxMenuItem.setText("Show Toolbar");
        showToolbarCheckBoxMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showToolbarCheckBoxMenuItemActionPerformed(evt);
            }
        });
        settingsMenu.add(showToolbarCheckBoxMenuItem);
        settingsMenu.add(jSeparator9);

        preferenceMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/settings.png"))); // NOI18N
        preferenceMenuItem.setText("Preference");
        preferenceMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preferenceMenuItemActionPerformed(evt);
            }
        });
        settingsMenu.add(preferenceMenuItem);

        gameMenuBar.add(settingsMenu);

        helpMenu.setText("Help");

        helpMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        helpMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/help.png"))); // NOI18N
        helpMenuItem.setText("Help");
        helpMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(helpMenuItem);

        showHintMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        showHintMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hint_bulb.png"))); // NOI18N
        showHintMenuItem.setText("Show Hint");
        showHintMenuItem.setEnabled(false);
        showHintMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showHintMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(showHintMenuItem);
        helpMenu.add(jSeparator8);

        aboutMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/information.png"))); // NOI18N
        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        gameMenuBar.add(helpMenu);

        setJMenuBar(gameMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newGameMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameMenuItemActionPerformed
        
    }//GEN-LAST:event_newGameMenuItemActionPerformed

    private void loadGameMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadGameMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loadGameMenuItemActionPerformed

    private void saveGameMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveGameMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveGameMenuItemActionPerformed

    private void endGameMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endGameMenuItemActionPerformed
        
    }//GEN-LAST:event_endGameMenuItemActionPerformed

    private void minimize2TrayMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minimize2TrayMenuItemActionPerformed
        ActionListener exitListener = new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                System.exit(0);
            }
        };
        WindowUtil.minimizeToTray(this, new javax.swing.ImageIcon(getClass()
            .getResource("/images/game-chip-24x24.png")).getImage(),
        exitListener);
    }//GEN-LAST:event_minimize2TrayMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void gameMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gameMenuActionPerformed

    private void undoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoMenuItemActionPerformed
        
    }//GEN-LAST:event_undoMenuItemActionPerformed

    private void redoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redoMenuItemActionPerformed
        
    }//GEN-LAST:event_redoMenuItemActionPerformed

    private void preferenceMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preferenceMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_preferenceMenuItemActionPerformed

    private void showToolbarCheckBoxMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showToolbarCheckBoxMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showToolbarCheckBoxMenuItemActionPerformed

    private void changePlayerNamesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePlayerNamesMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_changePlayerNamesMenuItemActionPerformed

    private void helpMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_helpMenuItemActionPerformed

    private void showHintMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showHintMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showHintMenuItemActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void newGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameButtonActionPerformed
        
    }//GEN-LAST:event_newGameButtonActionPerformed

    private void loadGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadGameButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loadGameButtonActionPerformed

    private void saveGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveGameButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveGameButtonActionPerformed

    private void endGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endGameButtonActionPerformed
        
    }//GEN-LAST:event_endGameButtonActionPerformed

    private void undoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoButtonActionPerformed
        
    }//GEN-LAST:event_undoButtonActionPerformed

    private void redoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redoButtonActionPerformed
        
    }//GEN-LAST:event_redoButtonActionPerformed

    private void hintButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hintButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hintButtonActionPerformed

    private void boardSizeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_boardSizeSliderStateChanged
        
    }//GEN-LAST:event_boardSizeSliderStateChanged

    private void evaluteCurrentGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evaluteCurrentGameButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_evaluteCurrentGameButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JPanel boardContainerPanel;
    private javax.swing.JSlider boardSizeSlider;
    private javax.swing.JMenuItem changePlayerNamesMenuItem;
    private javax.swing.JButton clearMovenentsButton;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JMenu editMenu;
    private javax.swing.JButton endGameButton;
    private javax.swing.JMenuItem endGameMenuItem;
    private javax.swing.JButton evaluteCurrentGameButton;
    private javax.swing.JMenuItem evaluteCurrentGameMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JToolBar gameControlToolBar;
    private javax.swing.JMenu gameMenu;
    private javax.swing.JMenuBar gameMenuBar;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem helpMenuItem;
    private javax.swing.JButton hintButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator12;
    private javax.swing.JPopupMenu.Separator jSeparator14;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JPopupMenu.Separator jSeparator9;
    private javax.swing.JButton loadGameButton;
    private javax.swing.JMenuItem loadGameMenuItem;
    private javax.swing.JMenuItem minimize2TrayMenuItem;
    private javax.swing.JTextArea movementTextArea;
    private javax.swing.JButton newGameButton;
    private javax.swing.JMenuItem newGameMenuItem;
    private javax.swing.JPanel playerInfoPanel;
    private javax.swing.JLabel playerNameLabel;
    private javax.swing.JMenuItem preferenceMenuItem;
    private javax.swing.JButton redoButton;
    private javax.swing.JMenuItem redoMenuItem;
    private javax.swing.JButton saveGameButton;
    private javax.swing.JMenuItem saveGameMenuItem;
    private javax.swing.JLabel selectedBoardSizeLabel;
    private javax.swing.JMenu settingsMenu;
    private javax.swing.JMenuItem showHintMenuItem;
    private javax.swing.JCheckBoxMenuItem showToolbarCheckBoxMenuItem;
    private javax.swing.JLabel timerLabel;
    private javax.swing.JButton undoButton;
    private javax.swing.JMenuItem undoMenuItem;
    // End of variables declaration//GEN-END:variables
}
