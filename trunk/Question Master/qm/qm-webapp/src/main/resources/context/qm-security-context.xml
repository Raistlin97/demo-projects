<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security-3.1.xsd">


	<http pattern="*.html" security="none" />
	<http pattern="/static/**" security="none" />
	<http pattern="/assets/**/*" security="none" />
	<http pattern="/images/**/*" security="none" />
	<http pattern="/index.htm*" security="none" />
	<http pattern="/login.htm*" security="none" />
	<http pattern="/logout.htm*" security="none" />
	<http pattern="/accessDenied.htm*" security="none" />
	<http pattern="/loginfailed.htm*" security="none" />
	<http pattern="/register.htm*" security="none" />
	<http pattern="/showRegister.htm*" security="none" />
	<http pattern="/errorPage.htm*" security="none" />
	<http pattern="/activateUser/**" security="none" />

	<global-method-security pre-post-annotations="enabled" secured-annotations="enabled" />

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/*" 		
				access="isAuthenticated()" />
	
		<intercept-url pattern="/user/*" 		
				access="hasAnyRole('ROLE_ADMIN, ROLE_USER, ROLE_EXAMINER')" />
		
		<intercept-url pattern="/course/*" 		
				access="hasAnyRole('ROLE_ADMIN, ROLE_USER, ROLE_EXAMINER')" />
		
		<intercept-url pattern="/question/*" 		
				access="hasAnyRole('ROLE_ADMIN, ROLE_USER, ROLE_EXAMINER')" />
				
		<intercept-url pattern="/test/*" 		
				access="hasAnyRole('ROLE_ADMIN, ROLE_USER, ROLE_EXAMINER')" />
				
		<intercept-url pattern="/exam/*" 		
				access="hasAnyRole('ROLE_ADMIN, ROLE_USER, ROLE_EXAMINER')" />
				
		<intercept-url pattern="/admin/*" 	
				access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/examiner/*" 	
				access="hasRole('ROLE_EXAMINER, ROLE_ADMIN')" />
 		
		<form-login login-page="/login.htm" default-target-url="/user/dashboard.htm"
			authentication-failure-url="/loginfailed.htm" />

		<logout logout-success-url="/logout.htm" delete-cookies="QMAPPSESSIONID"/>
		<access-denied-handler error-page="/accessDenied.htm" />
		
		<session-management invalid-session-url="/login.htm" session-fixation-protection="newSession">
		    <concurrency-control max-sessions="1" error-if-maximum-exceeded="false" expired-url="/index.htm"/>
		</session-management>
	</http>
	
	<!-- <authentication-manager>
	  <authentication-provider>
		<user-service>
			<user name="admin" password="admin" authorities="ROLE_ADMIN" />
			<user name="monitor" password="monitor" authorities="ROLE_USER" />
		</user-service>
	  </authentication-provider>
	</authentication-manager> -->


	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="qmDataSource"
				users-by-username-query="
					SELECT USER_NAME AS USERNAME, PASSWORD, IS_ACTIVATED AS ENABLED 
					FROM USER WHERE USER_NAME=?
				"
				authorities-by-username-query="
					SELECT U.USER_NAME AS USERNAME, R.ROLE_TITLE AS AUTHORITY
					FROM USER U INNER JOIN USER_ROLE_MAP URM ON (U.USER_ID = URM.USER_ID)
						INNER JOIN ROLE R ON (URM.ROLE_ID = R.ROLE_ID) 
					WHERE U.USER_NAME = ?
				" />
		</authentication-provider>

	</authentication-manager> 



<!-- 	<beans:bean id="daoAuthenticationProvider" -->
<!-- 		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"> -->
<!-- 		<beans:property name="userDetailsService" ref="userDetailsService" /> -->
<!-- 	</beans:bean> -->

<!-- 	<beans:bean id="authenticationManager" -->
<!-- 		class="org.springframework.security.authentication.ProviderManager"> -->
<!-- 		<beans:property name="providers"> -->
<!-- 			<beans:list> -->
<!-- 				<beans:ref local="daoAuthenticationProvider" /> -->
<!-- 			</beans:list> -->
<!-- 		</beans:property> -->
<!-- 	</beans:bean> -->

<!-- 	<authentication-manager> -->
<!-- 		<authentication-provider user-service-ref="userDetailsService"> -->
<!-- 			<password-encoder hash="sha" /> -->
<!-- 		</authentication-provider> -->
<!-- 	</authentication-manager> -->
	
	<!-- <beans:bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter"> 
		<beans:property name="authenticationEntryPoint" ref="authenticationEntryPoint" 
		/> <beans:property name="accessDeniedHandler" ref="accessDeniedHandler" /> 
		</beans:bean> <beans:bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint"> 
		<beans:property name="loginFormUrl" value="/login.htm" /> </beans:bean> <beans:bean 
		id="accessDeniedHandler" class="org.springframework.security.web.access.AccessDeniedHandlerImpl"> 
		<beans:property name="errorPage" value="/accessDenied.htm" /> </beans:bean> -->

</beans:beans>