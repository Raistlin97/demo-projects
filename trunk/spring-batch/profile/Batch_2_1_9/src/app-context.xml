<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">


	<bean id="customEditorConfigurer"
		class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="customEditors">
			<map>
				<entry key="java.util.Date">
					<bean class="org.springframework.beans.propertyeditors.CustomDateEditor">
						<constructor-arg index="0">
							<bean class="java.text.SimpleDateFormat">
								<constructor-arg value="MM/dd/yyyy HH:mm" />
							</bean>
						</constructor-arg>
						<constructor-arg index="1" value="false" />
					</bean>
				</entry>
				<entry key="org.springframework.batch.item.file.transform.Range[]">
					<bean
						class="org.springframework.batch.item.file.transform.RangeArrayPropertyEditor" />
				</entry>
			</map>
		</property>
	</bean>

	<bean id="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		lazy-init="false">
		<property name="autoStartup" value="true" />
		<property name="taskExecutor">
			<bean class="test.profile.batch.CustomTaskExecutor">
				<constructor-arg index="0" value="Quartz" />
				<property name="concurrencyLimit" value="10" />
			</bean>
		</property>
		<property name="triggers">
			<list>
				<bean class="org.springframework.scheduling.quartz.CronTriggerBean">
					<property name="jobDetail" ref="jobDetail_Test_Hello_01" />
					<property name="cronExpression" value="0 0/2 * * * ?" />
				</bean>
				<!-- <bean class="org.springframework.scheduling.quartz.CronTriggerBean">
					<property name="jobDetail" ref="jobDetail_Test_Hello_02" />
					<property name="cronExpression" value="0/30 0/1 * * * ?" />
				</bean> -->
			</list>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		lazy-init="true">
		<property name="dataSource" ref="genevaDataSource" />
	</bean>
	<bean id="genevaDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
		<property name="url" value="jdbc:sqlserver://10.41.12.36"></property>
		<property name="username" value="damtest" />
		<property name="password" value="damtest" />
		<property name="initialSize" value="8" />
		<property name="maxActive" value="15" />
		<property name="maxIdle" value="7" />
	</bean>
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="genevaDataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="incrementerFactory">
			<bean class="test.profile.batch.CustomIncrementerFactory">
				<property name="dataSource" ref="genevaDataSource" />
			</bean>
		</property>
	</bean>
	 
	<bean id="jobRegistry" lazy-init="false" 
		class="org.springframework.batch.core.configuration.support.MapJobRegistry" />
	<bean
		class="org.springframework.batch.core.configuration.support.AutomaticJobRegistrar">
		<property name="applicationContextFactories">
			<bean
				class="org.springframework.batch.core.configuration.support.ClasspathXmlApplicationContextsFactoryBean">
				<property name="resources" value="classpath*:/bpp-context.xml" />
			</bean>
		</property>
		<property name="jobLoader">
			<bean
				class="test.profile.batch.PrototypeJobLoader">
				<property name="jobRegistry" ref="jobRegistry" />
			</bean>
		</property>
	</bean>


	<bean id="jobLauncher" class="test.profile.batch.CustomJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
		<property name="taskExecutor">
			<bean class="org.springframework.core.task.SyncTaskExecutor" />
		</property>
	</bean>
	<bean id="simpleJob" class="org.springframework.batch.core.job.SimpleJob"
		abstract="true" scope="prototype">
		<property name="jobRepository" ref="jobRepository" />
		<property name="restartable" value="true" />
	</bean>
	<bean id="simpleStep"
		class="org.springframework.batch.core.step.item.SimpleStepFactoryBean"
		abstract="true" scope="prototype">
		<property name="transactionManager" ref="transactionManager" />
		<property name="jobRepository" ref="jobRepository" />
		<property name="startLimit" value="100" />
		<property name="commitInterval" value="1" />
	</bean>
	<bean id="jobDetail_Test_Hello_01" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="test.profile.batch.JobLauncherDetails" />
		<property name="group" value="quartz-batch" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobName" value="job_Test_Hello_01" />
				<entry key="jobLocator" value-ref="jobRegistry" />
				<entry key="jobLauncher" value-ref="jobLauncher" />
			</map>
		</property>
	</bean>
	<bean id="jobDetail_Test_Hello_02" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="test.profile.batch.JobLauncherDetails" />
		<property name="group" value="quartz-batch" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobName" value="job_Test_Hello_02" />
				<entry key="jobLocator" value-ref="jobRegistry" />
				<entry key="jobLauncher" value-ref="jobLauncher" />
			</map>
		</property>
	</bean>

</beans>
