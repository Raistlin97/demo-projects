<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">


	<bean id="jqueryMessageContext" class="net.sf.jquery.tags.common.MessageContext" factory-method="getContext"/>
	
	<bean id="messageResolverService" class="com.gs.demo.hr.web.service.MessageResolverServiceImpl" />
	<bean id="jsonizerCommonContext" class="net.sf.jsonizer.core.JsonizerCommonContext" factory-method="getContext">
		<property name="messageResolverService" ref="messageResolverService" />
	</bean>
	
	<!-- MVC -->
	<mvc:annotation-driven />

	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<bean id="localeResolver"
		class="com.gs.demo.hr.web.HrmgrLocaleResolver">
		<property name="defaultLocale" value="en" />
	</bean>
	
	<!-- <bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping" >
		<property name="interceptors">
		   <list>
			<ref bean="localeChangeInterceptor" />
		   </list>
		</property>
	</bean> -->
	
	<mvc:interceptors>
		<!-- Example:: <a href="?countryCode=es">Spanish</a> -->
		<bean id="localeChangeInterceptor"
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="countryCode" />
		</bean>

	</mvc:interceptors>

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:i18n/message</value>
			</list>
		</property>
	</bean>

	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />
		<property name="ignoreAcceptHeader" value="true" />
		<property name="contentNegotiationManager">
            <bean class="org.springframework.web.accept.ContentNegotiationManager">
                <constructor-arg>
                    <bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
                        <constructor-arg>
                            <map>
                                <entry key="json" value="application/json"/>
                                <entry key="xml" value="application/xml"/>
                            </map>
                        </constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
		<property name="defaultViews">
			<list>
				<!-- JAXB XML View -->
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<constructor-arg>
						<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
							<property name="classesToBeBound">
								<list>
									<value>com.gs.demo.hr.model.vo.DepartmentVo</value>
								</list>
							</property>
						</bean>
					</constructor-arg>
				</bean>
				<!-- JSON View -->
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
				</bean>
			</list>
		</property>
		
	</bean>

	<!-- View Resolvers (tiles) -->
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>classpath:tiles/tiles-common.xml</value>
			</list>
		</property>
	</bean>


	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</bean>
	
	
	<bean id="flexigridJsonOutputMapper" class="net.sf.jsonizer.service.impl.FlexigridJsonOutputMapper" />
</beans>
