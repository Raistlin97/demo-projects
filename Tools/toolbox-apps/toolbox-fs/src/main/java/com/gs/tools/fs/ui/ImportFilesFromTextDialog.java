/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ImportFilesFromTextDialog.java
 *
 * Created on Jul 2, 2011, 3:13:32 PM
 */
package com.gs.tools.fs.ui;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import javax.swing.DefaultListModel;

import com.gs.utils.swing.display.DisplayUtils;
import com.gs.utils.swing.file.FileBrowserUtil;
import com.gs.utils.text.StringUtil;

/**
 *
 * @author 50120C1509
 */
public class ImportFilesFromTextDialog extends javax.swing.JDialog {

	private javax.swing.JList sourceFilesList;
	
    /** Creates new form ImportFilesFromTextDialog */
    public ImportFilesFromTextDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    

    public javax.swing.JList getSourceFilesList() {
		return sourceFilesList;
	}
	public void setSourceFilesList(javax.swing.JList sourceFilesList) {
		this.sourceFilesList = sourceFilesList;
	}



	/** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        basePathTextField = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        fullNameCheckBox = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fileNamesTextArea = new javax.swing.JTextArea();
        importButton = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Import Files");
        setModal(true);

        jLabel1.setText("Base Path: ");

        browseButton.setText("Browse");
        browseButton.addActionListener(formListener);

        fullNameCheckBox.setText("File names contains the complete Path");
        fullNameCheckBox.addActionListener(formListener);

        jLabel2.setText("Please copy the file name in the bellow area. One file in one line...");

        fileNamesTextArea.setColumns(20);
        fileNamesTextArea.setRows(5);
        fileNamesTextArea.addKeyListener(formListener);
        jScrollPane1.setViewportView(fileNamesTextArea);

        importButton.setText("Import");
        importButton.setEnabled(false);
        importButton.addActionListener(formListener);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fullNameCheckBox)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(basePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(browseButton)))
                .addContainerGap(208, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(328, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(580, Short.MAX_VALUE)
                .addComponent(importButton)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 635, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(basePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fullNameCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(importButton)
                .addContainerGap())
        );

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.KeyListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == fullNameCheckBox) {
                ImportFilesFromTextDialog.this.fullNameCheckBoxActionPerformed(evt);
            }
            else if (evt.getSource() == browseButton) {
                ImportFilesFromTextDialog.this.browseButtonActionPerformed(evt);
            }
            else if (evt.getSource() == importButton) {
                ImportFilesFromTextDialog.this.importButtonActionPerformed(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == fileNamesTextArea) {
                ImportFilesFromTextDialog.this.fileNamesTextAreaKeyPressed(evt);
            }
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == fileNamesTextArea) {
                ImportFilesFromTextDialog.this.fileNamesTextAreaKeyReleased(evt);
            }
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == fileNamesTextArea) {
                ImportFilesFromTextDialog.this.fileNamesTextAreaKeyTyped(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void fullNameCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullNameCheckBoxActionPerformed
        if(fullNameCheckBox.isSelected()){
            basePathTextField.setEnabled(false);
            browseButton.setEnabled(false);
        }
        if(!fullNameCheckBox.isSelected()){
            basePathTextField.setEnabled(true);
            browseButton.setEnabled(true);
        }
    }//GEN-LAST:event_fullNameCheckBoxActionPerformed

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        File dir = FileBrowserUtil.openSingleFile(getParent(), null, true);
        if(null != dir){
        	basePathTextField.setText(dir.getAbsolutePath());
        }
    }//GEN-LAST:event_browseButtonActionPerformed

    private void importButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importButtonActionPerformed
        String fileNamesText = fileNamesTextArea.getText();
        if(!StringUtil.hasValidContent(fileNamesText)){
        	DisplayUtils.displayMessage("No file names found");
        	return;
        }
        String[] nameArray = fileNamesText.split("\n");
        List<File> validFiles = new ArrayList<File>();
        for (String fileName : nameArray) {
        	if(StringUtil.hasValidContent(fileName)){
        		File file = new File(fileName);
        		if(file.exists() && !file.isDirectory() && null != sourceFilesList){
        			DefaultListModel defaultListModel = (DefaultListModel) sourceFilesList.getModel();
        			defaultListModel.addElement(fileName);
        		}
        	}
		}
        
    }//GEN-LAST:event_importButtonActionPerformed
    
    private void fileNamesTextAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fileNamesTextAreaKeyPressed
        
    }//GEN-LAST:event_fileNamesTextAreaKeyPressed

    private void fileNamesTextAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fileNamesTextAreaKeyReleased
    	if(StringUtil.hasValidContent(fileNamesTextArea.getText())){
        	importButton.setEnabled(true);
        } else {
        	importButton.setEnabled(false);
        }
    }//GEN-LAST:event_fileNamesTextAreaKeyReleased

    private void fileNamesTextAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fileNamesTextAreaKeyTyped
    	
    }//GEN-LAST:event_fileNamesTextAreaKeyTyped

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField basePathTextField;
    private javax.swing.JButton browseButton;
    private javax.swing.JTextArea fileNamesTextArea;
    private javax.swing.JCheckBox fullNameCheckBox;
    private javax.swing.JButton importButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
