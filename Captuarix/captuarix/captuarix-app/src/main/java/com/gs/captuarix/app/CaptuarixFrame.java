/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gs.captuarix.app;

import com.gs.captuarix.common.CaptureContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.image.BufferedImage;

/**
 *
 * @author Sabuj Das | sabuj.das@gmail.com
 */
public class CaptuarixFrame extends javax.swing.JFrame {

	private static final CaptureContext context = CaptureContext.getContext();
	
	/**
	 * Creates new form CaptuarixFrame
	 */
	public CaptuarixFrame() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        regionButtonGroup = new javax.swing.ButtonGroup();
        appToolBar = new javax.swing.JToolBar();
        snapshotButton = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        playPauseButton = new javax.swing.JButton();
        recordPauseButton = new javax.swing.JButton();
        stopRecordButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        selectRegionButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jLabel3 = new javax.swing.JLabel();
        startDelayTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        baseSplitPane = new javax.swing.JSplitPane();
        leftContentPanel = new javax.swing.JPanel();
        contentDesktopPane = new javax.swing.JDesktopPane();
        appMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        playPauseMenuItem = new javax.swing.JMenuItem();
        recordPauseMenuItem = new javax.swing.JMenuItem();
        stopRecordMenuItem = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        snapshotMenuItem = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        minimize2TrayMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        regionMenu = new javax.swing.JMenu();
        selectAreaMenuItem = new javax.swing.JRadioButtonMenuItem();
        selectFullScreenMenuItem = new javax.swing.JRadioButtonMenuItem();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CaptuariX");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/images/captuarix-24x24.png")).getImage());
        setMinimumSize(new java.awt.Dimension(364, 300));

        appToolBar.setFloatable(false);
        appToolBar.setRollover(true);
        appToolBar.setMargin(new java.awt.Insets(0, 2, 0, 2));
        appToolBar.setMinimumSize(new java.awt.Dimension(364, 28));
        appToolBar.setPreferredSize(new java.awt.Dimension(100, 28));

        snapshotButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/snapshot.png"))); // NOI18N
        snapshotButton.setFocusable(false);
        snapshotButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        snapshotButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        snapshotButton.addActionListener(formListener);
        appToolBar.add(snapshotButton);
        appToolBar.add(jSeparator6);

        playPauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Play.png"))); // NOI18N
        playPauseButton.setToolTipText("Pause");
        playPauseButton.setFocusable(false);
        playPauseButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        playPauseButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        appToolBar.add(playPauseButton);

        recordPauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/RecordPressed.png"))); // NOI18N
        recordPauseButton.setToolTipText("Record");
        recordPauseButton.setFocusable(false);
        recordPauseButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        recordPauseButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        recordPauseButton.addActionListener(formListener);
        appToolBar.add(recordPauseButton);

        stopRecordButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Stop.png"))); // NOI18N
        stopRecordButton.setToolTipText("Stop");
        stopRecordButton.setFocusable(false);
        stopRecordButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        stopRecordButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        appToolBar.add(stopRecordButton);
        appToolBar.add(jSeparator1);

        selectRegionButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/layer-resize.png"))); // NOI18N
        selectRegionButton.setToolTipText("Resize");
        selectRegionButton.setFocusable(false);
        selectRegionButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        selectRegionButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        selectRegionButton.addActionListener(formListener);
        appToolBar.add(selectRegionButton);
        appToolBar.add(jSeparator2);

        jLabel3.setText("Start Delay:");
        appToolBar.add(jLabel3);

        startDelayTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        startDelayTextField.setText("5");
        startDelayTextField.setMaximumSize(new java.awt.Dimension(45, 23));
        startDelayTextField.setMinimumSize(new java.awt.Dimension(45, 23));
        startDelayTextField.setPreferredSize(new java.awt.Dimension(45, 23));
        appToolBar.add(startDelayTextField);

        jLabel4.setText(" sec");
        appToolBar.add(jLabel4);

        getContentPane().add(appToolBar, java.awt.BorderLayout.PAGE_START);

        baseSplitPane.setDividerLocation(140);
        baseSplitPane.setContinuousLayout(true);
        baseSplitPane.setOneTouchExpandable(true);

        leftContentPanel.setLayout(new java.awt.BorderLayout());
        baseSplitPane.setLeftComponent(leftContentPanel);
        baseSplitPane.setRightComponent(contentDesktopPane);

        getContentPane().add(baseSplitPane, java.awt.BorderLayout.CENTER);

        fileMenu.setText("File");

        playPauseMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        playPauseMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Play.png"))); // NOI18N
        playPauseMenuItem.setText("Play");
        fileMenu.add(playPauseMenuItem);

        recordPauseMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        recordPauseMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/RecordPressed.png"))); // NOI18N
        recordPauseMenuItem.setText("Record");
        recordPauseMenuItem.addActionListener(formListener);
        fileMenu.add(recordPauseMenuItem);

        stopRecordMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        stopRecordMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Stop.png"))); // NOI18N
        stopRecordMenuItem.setText("Stop");
        fileMenu.add(stopRecordMenuItem);
        fileMenu.add(jSeparator5);

        snapshotMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_INSERT, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        snapshotMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/snapshot.png"))); // NOI18N
        snapshotMenuItem.setText("Screenshot");
        snapshotMenuItem.addActionListener(formListener);
        fileMenu.add(snapshotMenuItem);
        fileMenu.add(jSeparator3);

        openMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setText("Save As...");
        saveAsMenuItem.addActionListener(formListener);
        fileMenu.add(saveAsMenuItem);
        fileMenu.add(jSeparator4);

        minimize2TrayMenuItem.setText("Minimize to Tray");
        minimize2TrayMenuItem.addActionListener(formListener);
        fileMenu.add(minimize2TrayMenuItem);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        exitMenuItem.setText("Exit");
        fileMenu.add(exitMenuItem);

        appMenuBar.add(fileMenu);

        editMenu.setText("Edit");
        appMenuBar.add(editMenu);

        regionMenu.setText("Region");

        regionButtonGroup.add(selectAreaMenuItem);
        selectAreaMenuItem.setText("Select Area");
        selectAreaMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/layer-resize.png"))); // NOI18N
        selectAreaMenuItem.addActionListener(formListener);
        regionMenu.add(selectAreaMenuItem);

        regionButtonGroup.add(selectFullScreenMenuItem);
        selectFullScreenMenuItem.setSelected(true);
        selectFullScreenMenuItem.setText("Full Screen");
        selectFullScreenMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/full screen_16.png"))); // NOI18N
        regionMenu.add(selectFullScreenMenuItem);

        appMenuBar.add(regionMenu);

        setJMenuBar(appMenuBar);

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == snapshotButton) {
                CaptuarixFrame.this.snapshotButtonActionPerformed(evt);
            }
            else if (evt.getSource() == recordPauseButton) {
                CaptuarixFrame.this.recordPauseButtonActionPerformed(evt);
            }
            else if (evt.getSource() == recordPauseMenuItem) {
                CaptuarixFrame.this.recordPauseMenuItemActionPerformed(evt);
            }
            else if (evt.getSource() == snapshotMenuItem) {
                CaptuarixFrame.this.snapshotMenuItemActionPerformed(evt);
            }
            else if (evt.getSource() == saveAsMenuItem) {
                CaptuarixFrame.this.saveAsMenuItemActionPerformed(evt);
            }
            else if (evt.getSource() == minimize2TrayMenuItem) {
                CaptuarixFrame.this.minimize2TrayMenuItemActionPerformed(evt);
            }
            else if (evt.getSource() == selectAreaMenuItem) {
                CaptuarixFrame.this.selectAreaMenuItemActionPerformed(evt);
            }
            else if (evt.getSource() == selectRegionButton) {
                CaptuarixFrame.this.selectRegionButtonActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

	private void selectAreaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectAreaMenuItemActionPerformed
		
	}//GEN-LAST:event_selectAreaMenuItemActionPerformed

	private void saveAsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMenuItemActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_saveAsMenuItemActionPerformed

	private void snapshotMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snapshotMenuItemActionPerformed
		takeSnapshot();
	}//GEN-LAST:event_snapshotMenuItemActionPerformed

	private void snapshotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snapshotButtonActionPerformed
		takeSnapshot();
	}//GEN-LAST:event_snapshotButtonActionPerformed

	private void recordPauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordPauseButtonActionPerformed
		
	}//GEN-LAST:event_recordPauseButtonActionPerformed

	private void minimize2TrayMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minimize2TrayMenuItemActionPerformed
		minimizeToTray(this, 
				new javax.swing.ImageIcon(getClass()
				.getResource("/images/captuarix-24x24.png")).getImage());
	}//GEN-LAST:event_minimize2TrayMenuItemActionPerformed

	private void recordPauseMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordPauseMenuItemActionPerformed
		
	}//GEN-LAST:event_recordPauseMenuItemActionPerformed

	private void selectRegionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectRegionButtonActionPerformed
		
		CaptureWindow captureWindow = new CaptureWindow(this, context.currentScreen);
		captureWindow.setVisible(true);
	}//GEN-LAST:event_selectRegionButtonActionPerformed

	private void takeSnapshot(){
		TrayIcon trayIcon = minimizeToTray(this, 
				new javax.swing.ImageIcon(getClass()
				.getResource("/images/captuarix-24x24.png")).getImage());
		try {
			Thread.sleep(1000);
			BufferedImage image = null;
					
			Rectangle screenRectangle=new Rectangle(
				CaptureContext.getContext().currentScreen.getLocation(),
				CaptureContext.getContext().currentScreen.getSize());
			Robot robot=new Robot();
			image = robot.createScreenCapture(screenRectangle);
			
		
			if(null != image){
				ImagePreviewInternalFrame frame = new ImagePreviewInternalFrame(image);
				frame.setSize(contentDesktopPane.getWidth()-50, contentDesktopPane.getHeight()-50);
				
				contentDesktopPane.add(frame);
				frame.setVisible(true);
			}
			Thread.sleep(500);
		} catch (Exception ex) {
			ex.printStackTrace();
		}
		
		if (SystemTray.isSupported() && null != trayIcon) {
			// get the SystemTray instance
			SystemTray tray = SystemTray.getSystemTray();
			tray.remove(trayIcon);
			this.setVisible(true);
		}
	}
	
	public static TrayIcon minimizeToTray(final Frame frame, Image image) {
		final PopupMenu popup = new PopupMenu();
		final TrayIcon trayIcon = new TrayIcon(image, "CaptuariX", popup);

		ActionListener actionListener = new ActionListener() {

			public void actionPerformed(ActionEvent e) {
				trayIcon.displayMessage("Action Event",
						"An Action Event Has Been Performed!",
						TrayIcon.MessageType.INFO);
			}
		};
		if (SystemTray.isSupported()) {
			// get the SystemTray instance
			final SystemTray tray = SystemTray.getSystemTray();
			MouseListener mouseListener = new MouseListener() {

				public void mouseClicked(MouseEvent e) {
					if(MouseEvent.BUTTON1 == e.getButton() && e.getClickCount() == 2){
						tray.remove(trayIcon);
						frame.setVisible(true);
					}
				}

				public void mouseEntered(MouseEvent e) {
					System.out.println("Tray Icon - Mouse entered!");
				}

				public void mouseExited(MouseEvent e) {
					System.out.println("Tray Icon - Mouse exited!");
				}

				public void mousePressed(MouseEvent e) {
					System.out.println("Tray Icon - Mouse pressed!");
				}

				public void mouseReleased(MouseEvent e) {
					System.out.println("Tray Icon - Mouse released!");
				}
			};

			ActionListener exitListener = new ActionListener() {

				public void actionPerformed(ActionEvent e) {
					System.out.println("Exiting...");
					System.exit(0);
				}
			};
			

			MenuItem restoreItem = new MenuItem("Restore");
			restoreItem.addActionListener(
				new ActionListener() {
					public void actionPerformed(ActionEvent e) {
						tray.remove(trayIcon);
						frame.setVisible(true);
					}
				}
			);
			popup.add(restoreItem);
			
			MenuItem exitItem = new MenuItem("Exit");
			exitItem.addActionListener(exitListener);
			popup.add(exitItem);

			trayIcon.setImageAutoSize(true);
			trayIcon.addActionListener(actionListener);
			trayIcon.addMouseListener(mouseListener);

			try {
				tray.add(trayIcon);
				frame.setVisible(false);
			} catch (AWTException e) {
				System.err.println("TrayIcon could not be added.");
			}

			return trayIcon;
		} else {
			// disable tray option in your application or
			// perform other actions
		}
		return null;
	}
	
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/*
		 * Set the Nimbus look and feel
		 */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(CaptuarixFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(CaptuarixFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(CaptuarixFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(CaptuarixFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/*
		 * Create and display the form
		 */
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {
				new CaptuarixFrame().setVisible(true);
			}
		});
	}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar appMenuBar;
    private javax.swing.JToolBar appToolBar;
    private javax.swing.JSplitPane baseSplitPane;
    private javax.swing.JDesktopPane contentDesktopPane;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JPanel leftContentPanel;
    private javax.swing.JMenuItem minimize2TrayMenuItem;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JButton playPauseButton;
    private javax.swing.JMenuItem playPauseMenuItem;
    private javax.swing.JButton recordPauseButton;
    private javax.swing.JMenuItem recordPauseMenuItem;
    private javax.swing.ButtonGroup regionButtonGroup;
    private javax.swing.JMenu regionMenu;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JRadioButtonMenuItem selectAreaMenuItem;
    private javax.swing.JRadioButtonMenuItem selectFullScreenMenuItem;
    private javax.swing.JButton selectRegionButton;
    private javax.swing.JButton snapshotButton;
    private javax.swing.JMenuItem snapshotMenuItem;
    private javax.swing.JTextField startDelayTextField;
    private javax.swing.JButton stopRecordButton;
    private javax.swing.JMenuItem stopRecordMenuItem;
    // End of variables declaration//GEN-END:variables
}
