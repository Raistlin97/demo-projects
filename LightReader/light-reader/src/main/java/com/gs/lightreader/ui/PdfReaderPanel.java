/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PdfReaderPanel.java
 *
 * Created on Sep 14, 2011, 11:50:55 AM
 */
package com.gs.lightreader.ui;

import com.adobe.acrobat.Viewer;
import com.lowagie.text.pdf.PRTokeniser;
import com.lowagie.text.pdf.PdfReader;
import java.awt.BorderLayout;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author 50120C1509
 */
public class PdfReaderPanel extends javax.swing.JPanel {

    private File pdfFile;
    private Viewer viewer;

    /** Creates new form PdfReaderPanel */
    public PdfReaderPanel() {
        initComponents();
    }

    public PdfReaderPanel(File pdfFile) {
        this.pdfFile = pdfFile;
        initComponents();
        // Set the layout for this panel
        this.setLayout(new BorderLayout());

        // Create the viewer
        try {
            viewer = new Viewer();
            
            FileInputStream fis = new FileInputStream(pdfFile);
            viewer.setDocumentInputStream(fis);
            this.add(viewer, BorderLayout.CENTER);
            viewer.activate();

            String page1 = viewer.getTextForPage(0);
            System.out.println("page1: \n" + page1);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 609, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    public void parsePdf(File src) throws IOException {
        PdfReader reader = new PdfReader(new FileInputStream(src));
        byte[] streamBytes = reader.getPageContent(1);
        PRTokeniser tokenizer = new PRTokeniser(streamBytes);

        StringBuffer buffer = new StringBuffer();
        while (tokenizer.nextToken()) {
            if (tokenizer.getTokenType() == PRTokeniser.TK_STRING) {
                buffer.append(tokenizer.getStringValue()).append("\n");
            }
            if (tokenizer.getTokenType() == PRTokeniser.TK_NUMBER) {
                buffer.append(tokenizer.getStringValue()).append("\n");
            }

        }
        //jTextArea1.setText(buffer.toString());
    }
}
